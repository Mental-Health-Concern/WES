# Prepare scratch orgs
# Create and deploy managed packages to orgs so that they're ready to use with sfpowerscripts 

name: Prepare Scratch Orgs

on:
  workflow_dispatch:
    inputs:
      no_orgs_in_pool:
        description: 'Number of scratch orgs to prepare in the pool'
        required: true
        default: '5'

env:
  JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
  CONSUMER_KEY: ${{ secrets.CONNECTED_APP_CONSUMER_KEY }}
  DEV_HUB_USERNAME: ${{ secrets.DEV_HUB_USERNAME}}
  NO_ORGS_IN_POOL: ${{ github.event.inputs.no_orgs_in_pool }}
  POOL_NAME: 'CI_pool'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    # Command below is taken from approach in trailheadapps repo https://github.com/trailheadapps/automation-components/actions/runs/106422605/workflow
    - name: Install Salesforce CLI
      run: |
        wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
        mkdir sfdx-cli
        tar xJf sfdx-linux-amd64.tar.xz -C sfdx-cli --strip-components 1
        ./sfdx-cli/install

    # Checkout the code in the pull request
    - name: 'Checkout source code'
      uses: actions/checkout@v2

    - name: List directory
      run: |
        ls

    - name: Authenticate and set default DevHub
      run: |
        echo "${JWT_SIGNING_KEY}" > server.key
        sfdx force:auth:jwt:grant --clientid $CONSUMER_KEY --jwtkeyfile server.key --username $DEV_HUB_USERNAME --setdefaultdevhubusername -a devhub

    - name: Install sfpowerscripts
      run: |
        echo 'y' | sfdx plugins:install sfpowerkit
        echo 'y' | sfdx plugins:install sfdmu
        echo 'y' | sfdx plugins:install @dxatscale/sfpowerscripts

    - name: Check current contents of pool
      run: |
        sfdx sfpowerscripts:pool:list -t $POOL_NAME

    - name: Remove any orgs already in pool
      run: |
        sfdx sfpowerscripts:pool:delete -t $POOL_NAME
        echo "Cleared scratch org pool $POOL_NAME"

    - name: Create pool with required number of orgs
      run: |
        sfdx sfpowerscripts:orchestrator:prepare -t $POOL_NAME -m $NO_ORGS_IN_POOL
    
    - name: Check new contents of pool
      run: |
        sfdx sfpowerscripts:pool:list -t $POOL_NAME